def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29


    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.loser.jumio_flutter_demo"
        minSdkVersion 19
        targetSdkVersion 29
        buildToolsVersion "29.0.3"
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // mandatory
    implementation "com.jumio.android:core:3.7.2@aar"   // Jumio Core library
    implementation "com.jumio.android:nv:3.7.2@aar"     // Netverify library

    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.room:room-runtime:2.2.5"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.localbroadcastmanager:localbroadcastmanager:1.0.0"

    implementation "com.google.android.material:material:1.1.0"


    // not mandatory
    implementation "com.jumio.android:face:3.7.2@aar"       // Face library

    implementation "com.jumio.android:nv-barcode:3.7.2@aar"     // barcode scanning
    implementation "com.jumio.android:nv-barcode-vision:3.7.2@aar"  // barcode scanning alternative (reduced size)
    implementation "com.jumio.android:nv-mrz:3.7.2@aar"     // MRZ scanning
    implementation "com.jumio.android:nv-nfc:3.7.2@aar"     // eMRTD scanning
    implementation "com.jumio.android:dv:3.7.2@aar"         // Document verification library
    implementation "com.jumio.android:nv-ocr:3.7.2@aar"     // Template matcher
    implementation "com.jumio.android:auth:3.7.2@aar"       // Authentication library
    implementation "com.jumio.android:bam:3.7.2@aar"        // BAM checkout library

    implementation "com.jumio.android:javadoc:3.7.2"
    implementation "com.google.android.gms:play-services-vision:19.0.0"     // barcode scanning alternative

    implementation "com.facetec:zoom-authentication:8.12.1@aar"     // Zoom face scanning library

    implementation "org.jmrtd:jmrtd:0.7.19"                 // eMRTD Scanning
    implementation "org.ejbca.cvc:cert-cvc:1.4.6"           // eMRTD Scanning
    implementation "org.bouncycastle:bcprov-jdk15on:1.65"   // eMRTD Scanning
    implementation "net.sf.scuba:scuba-sc-android:0.0.18"   // eMRTD Scanning
}